"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/nextjs-toploader";
exports.ids = ["vendor-chunks/nextjs-toploader"];
exports.modules = {

/***/ "(ssr)/./node_modules/nextjs-toploader/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/nextjs-toploader/dist/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar O = Object.create;\nvar h = Object.defineProperty;\nvar R = Object.getOwnPropertyDescriptor;\nvar z = Object.getOwnPropertyNames;\nvar j = Object.getPrototypeOf, q = Object.prototype.hasOwnProperty;\nvar d = (e, r)=>h(e, \"name\", {\n        value: r,\n        configurable: !0\n    });\nvar _ = (e, r)=>{\n    for(var n in r)h(e, n, {\n        get: r[n],\n        enumerable: !0\n    });\n}, T = (e, r, n, u)=>{\n    if (r && typeof r == \"object\" || typeof r == \"function\") for (let p of z(r))!q.call(e, p) && p !== n && h(e, p, {\n        get: ()=>r[p],\n        enumerable: !(u = R(r, p)) || u.enumerable\n    });\n    return e;\n};\nvar w = (e, r, n)=>(n = e != null ? O(j(e)) : {}, T(r || !e || !e.__esModule ? h(n, \"default\", {\n        value: e,\n        enumerable: !0\n    }) : n, e)), B = (e)=>T(h({}, \"__esModule\", {\n        value: !0\n    }), e);\nvar F = {};\n_(F, {\n    default: ()=>D\n});\nmodule.exports = B(F);\nvar o = w(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\")), x = w(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\")), t = w(__webpack_require__(/*! nprogress */ \"(ssr)/./node_modules/nprogress/nprogress.js\"));\nvar k = d(({ color: e, height: r, showSpinner: n, crawl: u, crawlSpeed: p, initialPosition: L, easing: E, speed: N, shadow: m })=>{\n    let l = e ?? \"#29d\", S = r ?? 3, v = !m && m !== void 0 ? \"\" : m ? `box-shadow:${m}` : `box-shadow:0 0 10px ${l},0 0 5px ${l}`, H = x.createElement(\"style\", null, `#nprogress{pointer-events:none}#nprogress .bar{background:${l};position:fixed;z-index:1031;top:0;left:0;width:100%;height:${S}px}#nprogress .peg{display:block;position:absolute;right:0;width:100px;height:100%;${v};opacity:1;-webkit-transform:rotate(3deg) translate(0px,-4px);-ms-transform:rotate(3deg) translate(0px,-4px);transform:rotate(3deg) translate(0px,-4px)}#nprogress .spinner{display:block;position:fixed;z-index:1031;top:15px;right:15px}#nprogress .spinner-icon{width:18px;height:18px;box-sizing:border-box;border:2px solid transparent;border-top-color:${l};border-left-color:${l};border-radius:50%;-webkit-animation:nprogress-spinner 400ms linear infinite;animation:nprogress-spinner 400ms linear infinite}.nprogress-custom-parent{overflow:hidden;position:relative}.nprogress-custom-parent #nprogress .bar,.nprogress-custom-parent #nprogress .spinner{position:absolute}@-webkit-keyframes nprogress-spinner{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg)}}@keyframes nprogress-spinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}`);\n    return x.useEffect(()=>{\n        t.configure({\n            showSpinner: n ?? !0,\n            trickle: u ?? !0,\n            trickleSpeed: p ?? 200,\n            minimum: L ?? .08,\n            easing: E ?? \"ease\",\n            speed: N ?? 200\n        });\n        function A(s, f) {\n            let a = new URL(s), i = new URL(f);\n            if (a.hostname === i.hostname && a.pathname === i.pathname && a.search === i.search) {\n                let c = a.hash, b = i.hash;\n                return c !== b && a.href.replace(c, \"\") === i.href.replace(b, \"\");\n            }\n            return !1;\n        }\n        d(A, \"isAnchorOfCurrentUrl\");\n        var y = document.querySelectorAll(\"html\");\n        function $(s) {\n            for(; s && s.tagName.toLowerCase() !== \"a\";)s = s.parentElement;\n            return s;\n        }\n        d($, \"findClosestAnchor\");\n        function P(s) {\n            try {\n                let f = s.target, a = $(f);\n                if (a) {\n                    let i = window.location.href, c = a.href, b = a.target === \"_blank\", M = A(i, c);\n                    c === i || M || b ? (t.start(), t.done(), [].forEach.call(y, function(g) {\n                        g.classList.remove(\"nprogress-busy\");\n                    })) : (t.start(), function(g) {\n                        let U = g.pushState;\n                        g.pushState = function() {\n                            return t.done(), [].forEach.call(y, function(C) {\n                                C.classList.remove(\"nprogress-busy\");\n                            }), U.apply(g, arguments);\n                        };\n                    }(window.history));\n                }\n            } catch  {\n                t.start(), t.done();\n            }\n        }\n        return d(P, \"handleClick\"), document.addEventListener(\"click\", P), ()=>{\n            document.removeEventListener(\"click\", P);\n        };\n    }, []), H;\n}, \"NextTopLoader\"), D = k;\nk.propTypes = {\n    color: o.string,\n    height: o.number,\n    showSpinner: o.bool,\n    crawl: o.bool,\n    crawlSpeed: o.number,\n    initialPosition: o.number,\n    easing: o.string,\n    speed: o.number,\n    shadow: o.oneOfType([\n        o.string,\n        o.bool\n    ])\n};\n0 && (0); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/nextjs-toploader/dist/index.js\n");

/***/ })

};
;